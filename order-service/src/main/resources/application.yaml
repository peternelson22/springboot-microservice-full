server:
  port: 8082
spring:
  application:
    name: ORDER-SERVICE
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:32768/orderdb
    username: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: configserver:http://localhost:9296
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.nelson.orderservice.event.OrderPlacedEvent
            trusted:
              packages: "com.nelson.orderservice.event"

management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      external:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 3s
  retry:
    instances:
      inventory:
        maxAttempts: 3
        waitDuration: 5s